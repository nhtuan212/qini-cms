name: PRODUCTION CI/CD
run-name: ${{ github.workflow }} (${{ inputs.branch }})

on:
    # push:
    #     branches: [ "main" ]
    # pull_request:
    #     branches: [ "main" ]
    workflow_dispatch:
        inputs:
            branch:
                description: "Branch name to deploy"
                required: true
                default: "main"

jobs:
    build:
        runs-on: ubuntu-latest

        environment: production

        steps:
            - name: Check Out Repository
              uses: actions/checkout@v4

            - name: Print branch name
              run: git branch > temp.txt && cat temp.txt && rm -rf temp.txt

            - name: Set Environment Variables
              run: |
                  echo "${{ secrets.QINI_CMS_ENV }}" | tr -d '\r' > .env

            - name: Build Docker image
              env:
                  PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
                  USER_NAME: root
                  IP: ${{ secrets.IP }}
                  PASSWORD: ${{ secrets.PASSWORD }}

              run: |
                  mkdir -p ~/.ssh
                  echo "$PRIVATE_KEY" | tr -d '\r' > ~/.ssh/id_rsa
                  chmod 700 ~/.ssh/id_rsa

                  rsync -avzr --rsync-path="mkdir -p /apps/qini-cms && rsync" --delete -e 'ssh -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null' ./ $USER_NAME@$IP:/apps/qini-cms
                  ssh -o ServerAliveInterval=60 -o ServerAlivecountMax=1000 -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null $USER_NAME@$IP "cd /apps/qini-cms && docker compose up -d --build && docker system prune -f -a"
                  # ssh -o ServerAliveInterval=60 -o ServerAlivecountMax=1000 -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null $USER_NAME@$IP "cd /apps/qini-cms && docker compose up -d --build && docker image prune -a"
